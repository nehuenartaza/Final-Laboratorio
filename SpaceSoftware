#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#define dimInt 30
#define dimChar 50
#define astronautas "astronauts.bin"
#define naves "ships.bin"
#define misiones "missions.bin"
#define retirados "astronauts_retired.bin"
#define naves_de_baja "ships_retired.bin"

typedef struct {
	char nombre[dimChar];
	char apellido[dimChar];
	char apodo[dimChar];
	int ID;
	int edad;
	char nacionalidad[dimChar];
	char especialidad[dimChar]; //piloto, astrofisico, ingeniero espacial, biologo
	int horas_vuelo;
	int misiones;
	int horas_estacion_espacial;
	int estado; //1-activo, 2-retirado
} STastronauta;
typedef struct {
	int ID;
	int tipo_nave; //1-Starship, 2-Falcon 9, 3-Falcon Heavy
	int vuelos;
	int horas_vuelo;
	int estado; //0-mantenimiento, 1-lista para usar, 2-en uso, 3-de baja
} STnave;
typedef struct {
	int ID;
	int ID_nave;
	int estado; //1-listo, 2-en vuelo, 3-retornada, 4-cancelada, 5-fallida
	int destino; //1-EEI, 2-orbita terrestre, 3-luna
	int cargamento; //1-satelite, 2-insumos para la EE
	int tripulantes[dimInt];
	char detalle_mision[dimChar]; //breve descripcion
} STmision;

int main
{
  	return 0;
}


void registrar_astronauta()
{
	STastronauta user;
	int opcion = 1;
	while ( opcion == 1 ) {
		printf ( "Nombre del astronauta:\n" );
		gets ( user.nombre );
		printf ( "Apellido del astronauta:\n );
		gets ( user.apellido );
		printf ( "Apodo del astronauta:\n );
		gets ( user.apodo );
		printf ( "Su ID:\n" );
		scanf ( "%d", &user.ID );
		printf ( "Su edad:\n" );
		scanf ( "%d", &user.edad );
		printf ( "Nacionalidad:\n );
		gets ( user.nacionalidad );
		printf ( "Especialidad:\n" );
		gets ( user.nacionalidad );
		printf ( "Horas de vuelo acumuladas:\n );
		scanf ( "%d", &user.horas_vuelo );
		printf ( "Cantidad de misiones en las que ha participado:\n" );
		scanf ( "%d", &user.misiones );
		printf ( "Horas invertidas en la estacion espacial:\n" );
		scanf ( "%d", &user.horas_estacion_espacial );
		user.estado = 1; //lo registra automaticamente en 'activo'
		guardar_astronauta(user);
		printf ( "para registrar otro astronauta ingrese 1:\n" );
		scanf ( "%d", &opcion );
}

void guardar_astronauta(STastronauta user)
{
	FILE *archivo = fopen(astronautas, "ab");
	if ( archivo != NULL ) {
		fwrite (&user, sizeof(STastronauta), 1, archivo);
		fclose(archivo);
	}
}

void cargar_nave()
{
	STnave ship;
	int opcion = 1;
	int opcion_nave = 0;
	while ( opcion == 1 ) {
		printf ( "ID de la nave:\n" );
		scanf ( "%d", &ship.ID );
		printf ( "Tipo de nave:\n" );
		scanf ( "%d", &ship.tipo_nave );
		while ( ship.tipo_nave < 0 && ship.tipo_nave > 3 ) {
			printf ( "No existe esa nave, intente de nuevo\n" );
			scanf ( "%d", &ship.tipo_nave );
		}
	}

}













